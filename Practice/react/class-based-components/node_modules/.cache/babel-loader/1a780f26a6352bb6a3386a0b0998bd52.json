{"ast":null,"code":"var _jsxFileName = \"D:\\\\wiki\\\\Practice\\\\react\\\\class-based-components\\\\src\\\\components\\\\CustomerFilter.js\";\nimport { Fragment, useState, useEffect, Component } from \"react\";\nimport Customers from \"./Customers\";\nimport styles from \"./CustomerFilter.module.css\"; //import CustomersContext from \"../store/customers-context\";\n//import ErrorBoundary from \"./ErrorBoundary\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomerFilter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredCustomers: DUMMY_CUSTOMERS,\n      filter: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.filter !== this.state.filter) {\n      this.setState({\n        filteredCustomers: DUMMY_CUSTOMERS.filter(customer => customer.name.includes(filter))\n      });\n    }\n\n    ;\n  }\n\n  filterHandler(event) {\n    this.setState({\n      filter: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.filter,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.filterHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Customers, {\n        customers: this.state.filteredCustomers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n} // class CustomerFilter extends Component {\n//   static contextType = CustomersContext;\n//   constructor() {\n//     super();\n//     this.state = {\n//       filteredCustomers: [],\n//       filter: \"\",\n//     };\n//   }\n//   componentDidMount() {\n//     // Отправить HTTP запрос...\n//     this.setState({\n//       filteredCustomers: this.context.customers,\n//     });\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.filter !== this.state.filter) {\n//       this.setState({\n//         filteredCustomers: this.context.customers.filter((customer) =>\n//           customer.name.includes(this.state.filter)\n//         ),\n//       });\n//     }\n//   }\n//   filterHandler(event) {\n//     this.setState({\n//       filter: event.target.value,\n//     });\n//   }\n//   render() {\n//     return (\n//       <Fragment>\n//         <div className={styles.filter}>\n//           <input type=\"search\" onChange={this.filterHandler.bind(this)} />\n//         </div>\n//         <ErrorBoundary>\n//           <Customers customers={this.state.filteredCustomers} />\n//         </ErrorBoundary>\n//       </Fragment>\n//     );\n//   }\n// }\n\n\nconst DUMMY_CUSTOMERS = [{\n  id: \"c1\",\n  name: \"Дмитрий\"\n}, {\n  id: \"c2\",\n  name: \"Михаил\"\n}, {\n  id: \"c3\",\n  name: \"Ирина\"\n}]; // const CustomerFilter = () => {\n//   const [filteredCustomers, setFilteredCustomers] = useState(DUMMY_CUSTOMERS);\n//   const [filter, setFilter] = useState(\"\");\n// useEffect(() => {\n//   setFilteredCustomers(\n//     DUMMY_CUSTOMERS.filter((customer) => customer.name.includes(filter))\n//   );\n// }, [filter]);\n//   const filterHandler = (event) => {\n//     setFilter(event.target.value);\n//   };\n//   return (\n//     <Fragment>\n//       <div className={styles.filter}>\n//         <input type=\"search\" onChange={filterHandler} />\n//       </div>\n//       <Customers customers={filteredCustomers} />\n//     </Fragment>\n//   );\n// };\n\nexport default CustomerFilter;","map":{"version":3,"sources":["D:/wiki/Practice/react/class-based-components/src/components/CustomerFilter.js"],"names":["Fragment","useState","useEffect","Component","Customers","styles","CustomerFilter","constructor","state","filteredCustomers","DUMMY_CUSTOMERS","filter","componentDidUpdate","prevProps","prevState","setState","customer","name","includes","filterHandler","event","target","value","render","bind","id"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CACA;AACA;;;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACrCI,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAEC,eADR;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAID,SAAS,CAACF,MAAV,KAAqB,KAAKH,KAAL,CAAWG,MAApC,EAA4C;AAC1C,WAAKI,QAAL,CAAc;AACZN,QAAAA,iBAAiB,EAAEC,eAAe,CAACC,MAAhB,CAAwBK,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuBP,MAAvB,CAArC;AADP,OAAd;AAGD;;AAAA;AAEF;;AAEDQ,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,SAAKL,QAAL,CAAc;AACZJ,MAAAA,MAAM,EAAES,KAAK,CAACC,MAAN,CAAaC;AADT,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,QAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACM,MAAvB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKQ,aAAL,CAAmBK,IAAnB,CAAwB,IAAxB;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWC;AAAjC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAlCoC,C,CAqCvC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAG,CACtB;AAAEe,EAAAA,EAAE,EAAE,IAAN;AAAYR,EAAAA,IAAI,EAAE;AAAlB,CADsB,EAEtB;AAAEQ,EAAAA,EAAE,EAAE,IAAN;AAAYR,EAAAA,IAAI,EAAE;AAAlB,CAFsB,EAGtB;AAAEQ,EAAAA,EAAE,EAAE,IAAN;AAAYR,EAAAA,IAAI,EAAE;AAAlB,CAHsB,CAAxB,C,CAMA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeX,cAAf","sourcesContent":["import { Fragment, useState, useEffect, Component } from \"react\";\nimport Customers from \"./Customers\";\nimport styles from \"./CustomerFilter.module.css\";\n//import CustomersContext from \"../store/customers-context\";\n//import ErrorBoundary from \"./ErrorBoundary\";\n\nclass CustomerFilter extends Component {\n  constructor(){\n    super();\n    this.state = {\n      filteredCustomers: DUMMY_CUSTOMERS,\n      filter: \"\",\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.filter !== this.state.filter) {\n      this.setState({\n        filteredCustomers: DUMMY_CUSTOMERS.filter((customer) => customer.name.includes(filter))\n      });\n    };\n    \n  }\n\n  filterHandler(event) {\n    this.setState({\n      filter: event.target.value,\n    })\n  }\n  \n  render() {\n    return (\n      <Fragment>\n        <div className={styles.filter}>\n          <input type=\"search\" onChange={this.filterHandler.bind(this)} />\n        </div>\n  \n        <Customers customers={this.state.filteredCustomers} />\n      </Fragment>\n    );\n  }\n}\n\n// class CustomerFilter extends Component {\n//   static contextType = CustomersContext;\n\n//   constructor() {\n//     super();\n//     this.state = {\n//       filteredCustomers: [],\n//       filter: \"\",\n//     };\n//   }\n\n//   componentDidMount() {\n//     // Отправить HTTP запрос...\n//     this.setState({\n//       filteredCustomers: this.context.customers,\n//     });\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.filter !== this.state.filter) {\n//       this.setState({\n//         filteredCustomers: this.context.customers.filter((customer) =>\n//           customer.name.includes(this.state.filter)\n//         ),\n//       });\n//     }\n//   }\n\n//   filterHandler(event) {\n//     this.setState({\n//       filter: event.target.value,\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <Fragment>\n//         <div className={styles.filter}>\n//           <input type=\"search\" onChange={this.filterHandler.bind(this)} />\n//         </div>\n//         <ErrorBoundary>\n//           <Customers customers={this.state.filteredCustomers} />\n//         </ErrorBoundary>\n//       </Fragment>\n//     );\n//   }\n// }\n\nconst DUMMY_CUSTOMERS = [\n  { id: \"c1\", name: \"Дмитрий\" },\n  { id: \"c2\", name: \"Михаил\" },\n  { id: \"c3\", name: \"Ирина\" },\n];\n\n// const CustomerFilter = () => {\n//   const [filteredCustomers, setFilteredCustomers] = useState(DUMMY_CUSTOMERS);\n//   const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   setFilteredCustomers(\n  //     DUMMY_CUSTOMERS.filter((customer) => customer.name.includes(filter))\n  //   );\n  // }, [filter]);\n\n//   const filterHandler = (event) => {\n//     setFilter(event.target.value);\n//   };\n\n//   return (\n//     <Fragment>\n//       <div className={styles.filter}>\n//         <input type=\"search\" onChange={filterHandler} />\n//       </div>\n\n//       <Customers customers={filteredCustomers} />\n//     </Fragment>\n//   );\n// };\n\nexport default CustomerFilter;\n"]},"metadata":{},"sourceType":"module"}