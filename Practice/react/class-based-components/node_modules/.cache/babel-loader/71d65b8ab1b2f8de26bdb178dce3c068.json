{"ast":null,"code":"var _jsxFileName = \"D:\\\\wiki\\\\Practice\\\\react\\\\class-based-components\\\\src\\\\components\\\\Customers.js\";\nimport { Component } from \"react\";\nimport Customer from \"./Customer\";\nimport styles from \"./Customers.module.css\"; // const DUMMY_CUSTOMERS = [\n//   { id: \"c1\", name: \"Дмитрий\" },\n//   { id: \"c2\", name: \"Михаил\" },\n//   { id: \"c3\", name: \"Ирина\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Customers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showCustomers: true\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.customers.length === 0) {\n      throw new Error(\"Нет Заказчиков!\");\n    }\n  }\n\n  toggleCustomersHandler() {\n    this.setState(curState => {\n      return {\n        showCustomers: !curState.showCustomers\n      };\n    });\n  }\n\n  render() {\n    const customersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.customers.map(customer => /*#__PURE__*/_jsxDEV(Customer, {\n        name: customer.name\n      }, customer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.customers,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCustomersHandler.bind(this),\n        children: [this.state.showCustomers ? \"Спрятать\" : \"Показать\", \" \\u0417\\u0430\\u043A\\u0430\\u0437\\u0447\\u0438\\u043A\\u043E\\u0432\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), this.state.showCustomers && customersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n; // const Customers = () => {\n//   const [showCustomers, setShowCustomers] = useState(true);\n//   const toggleCustomersHandler = () => {\n//     setShowCustomers((curState) => !curState);\n//   };\n//   const customersList = (\n//     <ul>\n//       {DUMMY_CUSTOMERS.map((customer) => (\n//         <Customer key={customer.id} name={customer.name} />\n//       ))}\n//     </ul>\n//   );\n//   return (\n//     <div className={styles.customers}>\n//       <button onClick={toggleCustomersHandler}>\n//         {showCustomers ? \"Спрятать\" : \"Показать\"} Заказчиков\n//       </button>\n//       {showCustomers && customersList}\n//     </div>\n//   );\n// };\n\nexport default Customers;","map":{"version":3,"sources":["D:/wiki/Practice/react/class-based-components/src/components/Customers.js"],"names":["Component","Customer","styles","Customers","constructor","state","showCustomers","componentDidUpdate","props","customers","length","Error","toggleCustomersHandler","setState","curState","render","customersList","map","customer","name","id","bind"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACrC,YAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;AACF;;AAEDC,EAAAA,sBAAsB,GAAG;AACvB,SAAKC,QAAL,CAAeC,QAAD,IAAc;AAC1B,aAAO;AAACR,QAAAA,aAAa,EAAE,CAACQ,QAAQ,CAACR;AAA1B,OAAP;AACD,KAFD;AAGD;;AAEDS,EAAAA,MAAM,GAAG;AAEP,UAAMC,aAAa,gBACjB;AAAA,gBACG,KAAKR,KAAL,CAAWC,SAAX,CAAqBQ,GAArB,CAA0BC,QAAD,iBACxB,QAAC,QAAD;AAA4B,QAAA,IAAI,EAAEA,QAAQ,CAACC;AAA3C,SAAeD,QAAQ,CAACE,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;;AAQA,wBACE;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACO,SAAvB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKG,sBAAL,CAA4BS,IAA5B,CAAiC,IAAjC,CAAjB;AAAA,mBACG,KAAKhB,KAAL,CAAWC,aAAX,GAA2B,UAA3B,GAAwC,UAD3C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,KAAKD,KAAL,CAAWC,aAAX,IAA4BU,aAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAtC+B;;AAuCjC,C,CAED;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeb,SAAf","sourcesContent":["import { Component } from \"react\";\nimport Customer from \"./Customer\";\n\nimport styles from \"./Customers.module.css\";\n\n// const DUMMY_CUSTOMERS = [\n//   { id: \"c1\", name: \"Дмитрий\" },\n//   { id: \"c2\", name: \"Михаил\" },\n//   { id: \"c3\", name: \"Ирина\" },\n// ];\n\nclass Customers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showCustomers: true,\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.customers.length === 0) {\n      throw new Error(\"Нет Заказчиков!\")\n    }\n  }\n\n  toggleCustomersHandler() {\n    this.setState((curState) => {\n      return {showCustomers: !curState.showCustomers}\n    })\n  }\n\n  render() {\n\n    const customersList = (\n      <ul>\n        {this.props.customers.map((customer) => (\n          <Customer key={customer.id} name={customer.name} />\n        ))}\n      </ul>\n    );\n\n    return (\n      <div className={styles.customers}>\n        <button onClick={this.toggleCustomersHandler.bind(this)}>\n          {this.state.showCustomers ? \"Спрятать\" : \"Показать\"} Заказчиков\n        </button>\n        {this.state.showCustomers && customersList}\n      </div>\n    );\n  };\n};\n\n// const Customers = () => {\n//   const [showCustomers, setShowCustomers] = useState(true);\n\n//   const toggleCustomersHandler = () => {\n//     setShowCustomers((curState) => !curState);\n//   };\n\n//   const customersList = (\n//     <ul>\n//       {DUMMY_CUSTOMERS.map((customer) => (\n//         <Customer key={customer.id} name={customer.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={styles.customers}>\n//       <button onClick={toggleCustomersHandler}>\n//         {showCustomers ? \"Спрятать\" : \"Показать\"} Заказчиков\n//       </button>\n//       {showCustomers && customersList}\n//     </div>\n//   );\n// };\n\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}