{"ast":null,"code":"var _jsxFileName = \"D:\\\\wiki\\\\Practice\\\\react\\\\food-order-app\\\\src\\\\store\\\\CartContextProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.item.findIndex(item => {\n      item.id === action.item.id;\n    });\n    const existingCartItem = state.item[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n    if (existingCartItem) {\n      updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n    }\n    ;\n\n    //const updatedItem = state.item.concat(action.item);\n\n    return {\n      item: updatedItem,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  ;\n  if (action.type === \"REMOVE_ITEM\") {}\n  ;\n  return defaultCartState;\n};\nconst CartContextProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n  const cartContext = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CartContextProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartContextProvider;\nexport default CartContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","item","totalAmount","cartReducer","state","action","type","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","CartContextProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"sources":["D:/wiki/Practice/react/food-order-app/src/store/CartContextProvider.js"],"sourcesContent":["import React, {useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  item: [],\r\n  totalAmount: 0,\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD_ITEM\") {\r\n    const updatedTotalAmount = state.totalAmount + (action.item.price * action.item.amount);\r\n\r\n    const existingCartItemIndex = state.item.findIndex((item) => {\r\n      item.id === action.item.id;\r\n    });\r\n    const existingCartItem = state.item[existingCartItemIndex];\r\n\r\n    let updatedItem;\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n    };  \r\n\r\n    //const updatedItem = state.item.concat(action.item);\r\n\r\n    return {\r\n      item: updatedItem,\r\n      totalAmount: updatedTotalAmount,\r\n    }\r\n  };\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n\r\n  };\r\n  return defaultCartState;\r\n}\r\n\r\nconst CartContextProvider = (props) => {\r\n\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItemHandler = (item) => {\r\n    dispatchCartAction({\r\n      type: \"ADD_ITEM\",\r\n      item: item,\r\n    })\r\n  };\r\n  const removeItemHandler = (id) => {\r\n    dispatchCartAction({\r\n      type: \"REMOVE_ITEM\",\r\n      id: id,\r\n    })\r\n  };\r\n\r\n  const cartContext = {\r\n    item: cartState.item,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n};\r\n\r\nexport default CartContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AAEzC,MAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAIA,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAIG,MAAM,CAACJ,IAAI,CAACO,KAAK,GAAGH,MAAM,CAACJ,IAAI,CAACQ,MAAO;IAEvF,MAAMC,qBAAqB,GAAGN,KAAK,CAACH,IAAI,CAACU,SAAS,CAAEV,IAAI,IAAK;MAC3DA,IAAI,CAACW,EAAE,KAAKP,MAAM,CAACJ,IAAI,CAACW,EAAE;IAC5B,CAAC,CAAC;IACF,MAAMC,gBAAgB,GAAGT,KAAK,CAACH,IAAI,CAACS,qBAAqB,CAAC;IAE1D,IAAII,WAAW;IACf,IAAIC,YAAY;IAEhB,IAAIF,gBAAgB,EAAE;MACpBC,WAAW,GAAG;QACZ,GAAGD,gBAAgB;QACnBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAM,GAAGJ,MAAM,CAACJ,IAAI,CAACQ;MAChD,CAAC;IACH;IAAC;;IAED;;IAEA,OAAO;MACLR,IAAI,EAAEa,WAAW;MACjBZ,WAAW,EAAEK;IACf,CAAC;EACH;EAAC;EACD,IAAIF,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE,CAEnC;EAAC;EACD,OAAON,gBAAgB;AACzB,CAAC;AAED,MAAMgB,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EAErC,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGrB,UAAU,CAACK,WAAW,EAAEH,gBAAgB,CAAC;EAEjF,MAAMoB,cAAc,GAAInB,IAAI,IAAK;IAC/BkB,kBAAkB,CAAC;MACjBb,IAAI,EAAE,UAAU;MAChBL,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EACD,MAAMoB,iBAAiB,GAAIT,EAAE,IAAK;IAChCO,kBAAkB,CAAC;MACjBb,IAAI,EAAE,aAAa;MACnBM,EAAE,EAAEA;IACN,CAAC,CAAC;EACJ,CAAC;EAED,MAAMU,WAAW,GAAG;IAClBrB,IAAI,EAAEiB,SAAS,CAACjB,IAAI;IACpBC,WAAW,EAAEgB,SAAS,CAAChB,WAAW;IAClCqB,OAAO,EAAEH,cAAc;IACvBI,UAAU,EAAEH;EACd,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACtCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GA7BIT,mBAAmB;AAAA,KAAnBA,mBAAmB;AA+BzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}