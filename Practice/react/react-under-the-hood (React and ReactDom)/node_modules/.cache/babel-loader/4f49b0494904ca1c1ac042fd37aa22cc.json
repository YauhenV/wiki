{"ast":null,"code":"var _jsxFileName = \"D:\\\\wiki\\\\Practice\\\\react\\\\react-under-the-hood (React and ReactDom)\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"./components/UI/button\";\nimport \"./App.css\";\nimport React, { useState, useCallback } from \"react\";\nimport ParagraphOutput from \"./components/Output/ParagraphOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isParagraphShown, setIsParagraphShown] = useState(false);\n  const [isTogglingActivated, setIsTogglingActivated] = useState(false);\n  const toogleParagraph = useCallback(() => {\n    if (isTogglingActivated) {\n      setIsParagraphShown(prevIsParagraphShown => !prevIsParagraphShown);\n    }\n  }, []);\n\n  const activateToggling = () => {\n    setIsTogglingActivated(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React \\u043F\\u043E\\u0434 \\u041A\\u0430\\u043F\\u043E\\u0442\\u043E\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParagraphOutput, {\n      isShown: isParagraphShown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: activateToggling,\n      children: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toogleParagraph,\n      children: [isParagraphShown ? \"Скрыть\" : \"Показать\", \"  \\u0410\\u0431\\u0437\\u0430\\u0446\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"L+Owj0CvWAmG3BcMUatWJXY2I9s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/wiki/Practice/react/react-under-the-hood (React and ReactDom)/src/App.js"],"names":["Button","React","useState","useCallback","ParagraphOutput","App","isParagraphShown","setIsParagraphShown","isTogglingActivated","setIsTogglingActivated","toogleParagraph","prevIsParagraphShown","activateToggling"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,qCAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,KAAD,CAA9D;AAGA,QAAMQ,eAAe,GAAGP,WAAW,CAAC,MAAM;AACxC,QAAIK,mBAAJ,EAAyB;AACvBD,MAAAA,mBAAmB,CAACI,oBAAoB,IAAI,CAACA,oBAA1B,CAAnB;AACD;AACF,GAJkC,EAIhC,EAJgC,CAAnC;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAIH;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAIM,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAIF,eAAnB;AAAA,iBAAqCJ,gBAAgB,GAAG,QAAH,GAAc,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzBQD,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import Button from \"./components/UI/button\";\nimport \"./App.css\";\nimport React, {useState, useCallback } from \"react\";\nimport ParagraphOutput from \"./components/Output/ParagraphOutput\";\n\nfunction App() {\n\n  const [isParagraphShown, setIsParagraphShown] = useState(false);\n  const [isTogglingActivated, setIsTogglingActivated] = useState(false);\n\n\n  const toogleParagraph = useCallback(() => {\n    if (isTogglingActivated) {\n      setIsParagraphShown(prevIsParagraphShown => !prevIsParagraphShown);\n    } \n  }, []);\n\n  const activateToggling = () => {\n    setIsTogglingActivated(true);\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>React под Капотом</h1>\n      <ParagraphOutput isShown = {isParagraphShown}/>\n      <Button onClick = {activateToggling}>Активировать переключение</Button>\n      <Button onClick = {toogleParagraph}>{isParagraphShown ? \"Скрыть\" : \"Показать\"}  Абзац</Button>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}