{"ast":null,"code":"import _slicedToArray from\"D:\\\\wiki\\\\Practice\\\\react\\\\styling-components-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";//import styled from \"styled-components\";\nimport React,{useState}from\"react\";import Button from\"../../UI/Button/Button\";import styles from\"./TaskInput.module.css\";/* \nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n  color: ${(props) => (props.invalid ? \"red\" : \"black\")};\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid ${(props) => (props.invalid ? \"red\" : \"#ccc\")};\n  background: ${(props) => (props.invalid ? \"rgb(243, 157, 157)\" : \"transparent\")};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #c8e1e4;\n  border-color: #00358b;\n}\n\n\n&.invalid input {\n  border-color: red;\n  background: rgb(243, 157, 157);\n}\n\n&.invalid label {\n  color: red;\n}\n\n`;\n\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskInput=function TaskInput(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isInputValid=_useState4[0],setIsInputValid=_useState4[1];var taskInputChangeHandler=function taskInputChangeHandler(event){if(event.target.value.trim().length>0){setIsInputValid(true);}setInputText(event.target.value);};var formSubmitHandler=function formSubmitHandler(event){event.preventDefault();if(inputText.trim().length===0){setIsInputValid(false);return;}props.onAddTask(inputText);setInputText(\"\");};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:formSubmitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(styles[\"form-control\"],\" \").concat(!isInputValid&&styles.invalid),children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:taskInputChangeHandler,value:inputText})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0417\\u0430\\u0434\\u0430\\u0447\\u0443\"})]});};export default TaskInput;","map":{"version":3,"sources":["D:/wiki/Practice/react/styling-components-project/src/components/Tasks/TaskInput/TaskInput.js"],"names":["React","useState","Button","styles","TaskInput","props","inputText","setInputText","isInputValid","setIsInputValid","taskInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddTask","invalid"],"mappings":"iJAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,cAAkCJ,QAAQ,CAAC,EAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA,eAAwCN,QAAQ,CAAC,IAAD,CAAhD,yCAAOO,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAW,CACxC,GAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,CAAmC,CAAvC,CAA0C,CACxCN,eAAe,CAAC,IAAD,CAAf,CACD,CACDF,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,CACD,CALD,CAOA,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACL,KAAD,CAAW,CACnCA,KAAK,CAACM,cAAN,GACA,GAAIX,SAAS,CAACQ,IAAV,GAAiBC,MAAjB,GAA4B,CAAhC,CAAmC,CACjCN,eAAe,CAAC,KAAD,CAAf,CACA,OACD,CAEDJ,KAAK,CAACa,SAAN,CAAgBZ,SAAhB,EACAC,YAAY,CAAC,EAAD,CAAZ,CACD,CATD,CAWA,mBACE,cAAM,QAAQ,CAAES,iBAAhB,wBAWE,aAAK,SAAS,WAAKb,MAAM,CAAC,cAAD,CAAX,aAA+B,CAACK,YAAD,EAAiBL,MAAM,CAACgB,OAAvD,CAAd,wBACE,+DADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAET,sBAA7B,CAAqD,KAAK,CAAEJ,SAA5D,EAFF,GAXF,cAeE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,mGAfF,GADF,CAmBD,CAzCD,CA2CA,cAAeF,CAAAA,SAAf","sourcesContent":["//import styled from \"styled-components\";\nimport React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./TaskInput.module.css\";\n\n/* \nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n  color: ${(props) => (props.invalid ? \"red\" : \"black\")};\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid ${(props) => (props.invalid ? \"red\" : \"#ccc\")};\n  background: ${(props) => (props.invalid ? \"rgb(243, 157, 157)\" : \"transparent\")};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #c8e1e4;\n  border-color: #00358b;\n}\n\n\n&.invalid input {\n  border-color: red;\n  background: rgb(243, 157, 157);\n}\n\n&.invalid label {\n  color: red;\n}\n\n`;\n\n*/\n\nconst TaskInput = (props) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [isInputValid, setIsInputValid] = useState(true);\n\n  const taskInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsInputValid(true);\n    }\n    setInputText(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (inputText.trim().length === 0) {\n      setIsInputValid(false);\n      return;\n    }\n\n    props.onAddTask(inputText);\n    setInputText(\"\");\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      \n      {/*<FormControl className={!isInputValid && \"invalid\"}>*/}\n      \n      {/*\n      <FormControl invalid={!isInputValid}>\n        <label>Задачи</label>\n        <input type=\"text\" onChange={taskInputChangeHandler} />\n      </FormControl>\n      */}\n\n      <div className={`${styles[\"form-control\"]} ${!isInputValid && styles.invalid}`}>\n        <label>Задачи</label>\n        <input type=\"text\" onChange={taskInputChangeHandler} value={inputText} />\n      </div>\n      <Button type=\"submit\">Добавить Задачу</Button>\n    </form>\n  );\n};\n\nexport default TaskInput;\n"]},"metadata":{},"sourceType":"module"}