{"ast":null,"code":"import _toConsumableArray from\"D:\\\\wiki\\\\Practice\\\\react\\\\styling-components-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"D:\\\\wiki\\\\Practice\\\\react\\\\styling-components-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from\"react\";import TaskList from\"./components/Tasks/TaskList/TaskList\";import TaskInput from\"./components/Tasks/TaskInput/TaskInput\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([{text:\"Создание курса - 1 час\",id:\"t1\"},{text:\"Разминка 15 мин\",id:\"t2\"},{text:\"Создание курса - 1 час\",id:\"t3\"}]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var addTaskHandler=function addTaskHandler(inputText){setTasks(function(prevTasks){var updatedTasks=_toConsumableArray(prevTasks);updatedTasks.unshift({text:inputText,id:Math.random().toString()});return updatedTasks;});};var deleteTaskHandler=function deleteTaskHandler(taskId){setTasks(function(prevTasks){var updatedTasks=prevTasks.filter(function(task){return task.id!==taskId;});return updatedTasks;});};var content=/*#__PURE__*/_jsx(\"p\",{style:{textAlign:\"center\"},children:\"\\u0417\\u0430\\u0434\\u0430\\u0447 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E! \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C?\"});if(tasks.length>0){content=/*#__PURE__*/_jsx(TaskList,{items:tasks,onDeleteTask:deleteTaskHandler});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"section\",{id:\"task-form\",children:/*#__PURE__*/_jsx(TaskInput,{onAddTask:addTaskHandler})}),/*#__PURE__*/_jsx(\"section\",{id:\"tasks\",children:content})]});};export default App;","map":{"version":3,"sources":["D:/wiki/Practice/react/styling-components-project/src/App.js"],"names":["React","useState","TaskList","TaskInput","App","text","id","tasks","setTasks","addTaskHandler","inputText","prevTasks","updatedTasks","unshift","Math","random","toString","deleteTaskHandler","taskId","filter","task","content","textAlign","length"],"mappings":"0SAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,sCAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wCAAtB,CACA,MAAO,WAAP,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,cAA0BH,QAAQ,CAAC,CACjC,CAAEI,IAAI,CAAE,wBAAR,CAAkCC,EAAE,CAAE,IAAtC,CADiC,CAEjC,CAAED,IAAI,CAAE,iBAAR,CAA2BC,EAAE,CAAE,IAA/B,CAFiC,CAGjC,CAAED,IAAI,CAAE,wBAAR,CAAkCC,EAAE,CAAE,IAAtC,CAHiC,CAAD,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,SAAD,CAAe,CACpCF,QAAQ,CAAC,SAACG,SAAD,CAAe,CACtB,GAAMC,CAAAA,YAAY,oBAAOD,SAAP,CAAlB,CACAC,YAAY,CAACC,OAAb,CAAqB,CAAER,IAAI,CAAEK,SAAR,CAAmBJ,EAAE,CAAEQ,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAvB,CAArB,EACA,MAAOJ,CAAAA,YAAP,CACD,CAJO,CAAR,CAKD,CAND,CAQA,GAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,CAAY,CACpCV,QAAQ,CAAC,SAACG,SAAD,CAAe,CACtB,GAAMC,CAAAA,YAAY,CAAGD,SAAS,CAACQ,MAAV,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACd,EAAL,GAAYY,MAAtB,EAAjB,CAArB,CACA,MAAON,CAAAA,YAAP,CACD,CAHO,CAAR,CAID,CALD,CAOA,GAAIS,CAAAA,OAAO,cACT,UAAG,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAV,uJADF,CAIA,GAAIf,KAAK,CAACgB,MAAN,CAAe,CAAnB,CAAsB,CACpBF,OAAO,cAAG,KAAC,QAAD,EAAU,KAAK,CAAEd,KAAjB,CAAwB,YAAY,CAAEU,iBAAtC,EAAV,CACD,CAED,mBACE,oCACE,gBAAS,EAAE,CAAC,WAAZ,uBACE,KAAC,SAAD,EAAW,SAAS,CAAER,cAAtB,EADF,EADF,cAIE,gBAAS,EAAE,CAAC,OAAZ,UAAqBY,OAArB,EAJF,GADF,CAQD,CAtCD,CAwCA,cAAejB,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport TaskList from \"./components/Tasks/TaskList/TaskList\";\nimport TaskInput from \"./components/Tasks/TaskInput/TaskInput\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    { text: \"Создание курса - 1 час\", id: \"t1\" },\n    { text: \"Разминка 15 мин\", id: \"t2\" },\n    { text: \"Создание курса - 1 час\", id: \"t3\" },\n  ]);\n\n  const addTaskHandler = (inputText) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = [...prevTasks];\n      updatedTasks.unshift({ text: inputText, id: Math.random().toString() });\n      return updatedTasks;\n    });\n  };\n\n  const deleteTaskHandler = (taskId) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = prevTasks.filter((task) => task.id !== taskId);\n      return updatedTasks;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: \"center\" }}>Задач не найдено! Добавить?</p>\n  );\n\n  if (tasks.length > 0) {\n    content = <TaskList items={tasks} onDeleteTask={deleteTaskHandler} />;\n  }\n\n  return (\n    <div>\n      <section id=\"task-form\">\n        <TaskInput onAddTask={addTaskHandler} />\n      </section>\n      <section id=\"tasks\">{content}</section>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}