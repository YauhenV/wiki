{"version":3,"sources":["components/Tasks/TaskInput/TaskInput.module.css","components/UI/Button/Button.module.css","components/Tasks/Task/Task.js","components/Tasks/TaskList/TaskList.js","components/UI/Button/Button.js","components/Tasks/TaskInput/TaskInput.js","App.js","index.js"],"names":["module","exports","Task","props","className","onClick","onDelete","id","children","TaskList","items","map","task","onDeleteTask","text","Button","type","styles","button","TaskInput","useState","inputText","setInputText","isInputValid","setIsInputValid","onSubmit","event","preventDefault","trim","length","onAddTask","invalid","onChange","target","value","App","tasks","setTasks","content","style","textAlign","taskId","prevTasks","filter","updatedTasks","unshift","Math","random","toString","ReactDOM","render","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,eAAe,gCAAgC,QAAU,6B,iBCA3ED,EAAOC,QAAU,CAAC,OAAS,yB,kLCkBZC,EAfF,SAACC,GAQZ,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCGEC,G,MAZE,SAACN,GAChB,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAoBL,GAAIK,EAAKL,GAAID,SAAUH,EAAMU,aAAjD,SACGD,EAAKE,MADGF,EAAKL,W,gBC+BTQ,EATA,SAACZ,GACd,OACE,wBAAQa,KAAMb,EAAMa,KAAMZ,UAAWa,IAAOC,OAA5C,SACGf,EAAMK,Y,gBCwDEW,EA3CG,SAAChB,GACjB,MAAkCiB,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAoBA,OACE,uBAAMC,SAZkB,SAACC,GACzBA,EAAMC,iBAC0B,IAA5BN,EAAUO,OAAOC,QAKrB1B,EAAM2B,UAAUT,GAChBC,EAAa,KALXE,GAAgB,IASlB,UAWE,sBAAKpB,UAAS,UAAKa,IAAO,gBAAZ,aAAgCM,GAAgBN,IAAOc,SAArE,UACE,yEACA,uBAAOf,KAAK,OAAOgB,SAhCM,SAACN,GAC1BA,EAAMO,OAAOC,MAAMN,OAAOC,OAAS,GACrCL,GAAgB,GAElBF,EAAaI,EAAMO,OAAOC,QA4B+BA,MAAOb,OAE9D,cAAC,EAAD,CAAQL,KAAK,SAAb,uGCvCSmB,G,MAxCH,WACV,MAA0Bf,mBAAS,CACjC,CAAEN,KAAM,yGAA0BP,GAAI,MACtC,CAAEO,KAAM,yEAAmBP,GAAI,MAC/B,CAAEO,KAAM,yGAA0BP,GAAI,QAHxC,mBAAO6B,EAAP,KAAcC,EAAd,KAqBIC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,uJAOF,OAJIJ,EAAMP,OAAS,IACjBS,EAAU,cAAC,EAAD,CAAU5B,MAAO0B,EAAOvB,aAZV,SAAC4B,GACzBJ,GAAS,SAACK,GAER,OADqBA,EAAUC,QAAO,SAAC/B,GAAD,OAAUA,EAAKL,KAAOkC,YAc9D,gCACE,yBAASlC,GAAG,YAAZ,SACE,cAAC,EAAD,CAAWuB,UA1BM,SAACT,GACtBgB,GAAS,SAACK,GACR,IAAME,EAAY,YAAOF,GAEzB,OADAE,EAAaC,QAAQ,CAAE/B,KAAMO,EAAWd,GAAIuC,KAAKC,SAASC,aACnDJ,UAwBP,yBAASrC,GAAG,QAAZ,SAAqB+B,SCpC3BW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5e2c7dde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"TaskInput_form-control__1IcyB\",\"invalid\":\"TaskInput_invalid__3nKt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1_NoR\"};","import React from \"react\";\n\nimport \"./Task.css\";\n\nconst Task = (props) => {\n  // const [deleteText, setDeleteText] = useState('');\n\n  const deleteHandler = () => {\n    // setDeleteText('(Deleted!)');\n    props.onDelete(props.id);\n  };\n\n  return (\n    <li className=\"task-item\" onClick={deleteHandler}>\n      {props.children}\n    </li>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\n\nimport Task from \"../Task/Task\";\nimport \"./TaskList.css\";\n\nconst TaskList = (props) => {\n  return (\n    <ul className=\"task-list\">\n      {props.items.map((task) => (\n        <Task key={task.id} id={task.id} onDelete={props.onDeleteTask}>\n          {task.text}\n        </Task>\n      ))}\n    </ul>\n  );\n};\n\nexport default TaskList;\n","import styles from \"./Button.module.css\";\n/*\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  width: 100%;\n  font: inherit;\n  padding: 0.5rem 1.5rem;\n  color: white;\n  background: #00358b;\n  border-radius: 4px;\n  box-shadow: 0 0 4px rgba(50, 50, 50, 0.25);\n  cursor: pointer;\n\n  @media (min-width: 700px) {\n    width: auto;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover,\n  & :active {\n    background: #245fbd;\n    box-shadow: 0 0 8px rgba(50, 50, 50, 0.25);\n  }\n`;\n\n*/\n\nconst Button = (props) => {\n  return (\n    <button type={props.type} className={styles.button}>\n      {props.children}\n    </button>\n  );\n};\n\n\nexport default Button;\n","//import styled from \"styled-components\";\nimport React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./TaskInput.module.css\";\n\n/* \nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n  color: ${(props) => (props.invalid ? \"red\" : \"black\")};\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 1px solid ${(props) => (props.invalid ? \"red\" : \"#ccc\")};\n  background: ${(props) => (props.invalid ? \"rgb(243, 157, 157)\" : \"transparent\")};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #c8e1e4;\n  border-color: #00358b;\n}\n\n\n&.invalid input {\n  border-color: red;\n  background: rgb(243, 157, 157);\n}\n\n&.invalid label {\n  color: red;\n}\n\n`;\n\n*/\n\nconst TaskInput = (props) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [isInputValid, setIsInputValid] = useState(true);\n\n  const taskInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsInputValid(true);\n    }\n    setInputText(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (inputText.trim().length === 0) {\n      setIsInputValid(false);\n      return;\n    }\n\n    props.onAddTask(inputText);\n    setInputText(\"\");\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      \n      {/*<FormControl className={!isInputValid && \"invalid\"}>*/}\n      \n      {/*\n      <FormControl invalid={!isInputValid}>\n        <label>Задачи</label>\n        <input type=\"text\" onChange={taskInputChangeHandler} />\n      </FormControl>\n      */}\n\n      <div className={`${styles[\"form-control\"]} ${!isInputValid && styles.invalid}`}>\n        <label>Задачи</label>\n        <input type=\"text\" onChange={taskInputChangeHandler} value={inputText} />\n      </div>\n      <Button type=\"submit\">Добавить Задачу</Button>\n    </form>\n  );\n};\n\nexport default TaskInput;\n","import React, { useState } from \"react\";\n\nimport TaskList from \"./components/Tasks/TaskList/TaskList\";\nimport TaskInput from \"./components/Tasks/TaskInput/TaskInput\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    { text: \"Создание курса - 1 час\", id: \"t1\" },\n    { text: \"Разминка 15 мин\", id: \"t2\" },\n    { text: \"Создание курса - 1 час\", id: \"t3\" },\n  ]);\n\n  const addTaskHandler = (inputText) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = [...prevTasks];\n      updatedTasks.unshift({ text: inputText, id: Math.random().toString() });\n      return updatedTasks;\n    });\n  };\n\n  const deleteTaskHandler = (taskId) => {\n    setTasks((prevTasks) => {\n      const updatedTasks = prevTasks.filter((task) => task.id !== taskId);\n      return updatedTasks;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: \"center\" }}>Задач не найдено! Добавить?</p>\n  );\n\n  if (tasks.length > 0) {\n    content = <TaskList items={tasks} onDeleteTask={deleteTaskHandler} />;\n  }\n\n  return (\n    <div>\n      <section id=\"task-form\">\n        <TaskInput onAddTask={addTaskHandler} />\n      </section>\n      <section id=\"tasks\">{content}</section>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}