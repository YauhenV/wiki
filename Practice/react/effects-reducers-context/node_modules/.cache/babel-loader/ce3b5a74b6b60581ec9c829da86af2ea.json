{"ast":null,"code":"var _jsxFileName = \"D:\\\\wiki\\\\Practice\\\\react\\\\effects-reducers-context\\\\src\\\\context\\\\Auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLogedIn: false,\n  onLogout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: isLoggedIn,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/wiki/Practice/react/effects-reducers-context/src/context/Auth-context.js"],"names":["React","useState","AuthContext","createContext","isLogedIn","onLogout","AuthContextProvider","props","isLoggedIn","setIsLoggedIn","logoutHandler","loginHandler","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,SAAS,EAAE,KAD2B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFoB,CAApB,CAApB;AAKA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMS,aAAa,GAAG,MAAM;AAC1BD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACzBF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,UAA7B;AAAA,cACLD,KAAK,CAACK;AADD;AAAA;AAAA;AAAA;AAAA,UAAR;AAGD,CAdM;;GAAMN,mB;;KAAAA,mB;AAgBb,eAAeJ,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  isLogedIn: false,\r\n  onLogout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const logoutHandler = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    setIsLoggedIn(true);\r\n  }\r\n\r\n  return (<AuthContext.Provider value={isLoggedIn}>\r\n    {props.children}\r\n  </AuthContext.Provider>)\r\n};\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}