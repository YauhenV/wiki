{"ast":null,"code":"var _jsxFileName = \"D:\\\\wiki\\\\Practice\\\\react\\\\effects-reducers-context\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes(\"@\")\n    };\n  }\n\n  ;\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.includes(\"@\")\n    };\n  }\n\n  ;\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 7\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 7\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [inputEmail, setInputEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [inputPassword, setInputPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: undefined\n  });\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: undefined\n  });\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [emailState.value, passwordState.value]);\n\n  const emailChangeHandler = event => {\n    dispatchEmailState({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    }); // setFormIsValid(\n    //     event.target.value.includes(\"@\") && passwordState.isValid\n    //   );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPasswordState({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.trim().length > 7 && emailState.isValid\n    //   );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasswordState({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${emailState.isValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${passwordState.isValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: styles.btn,\n          disabled: !formIsValid,\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"qVKKoxuXYLZnGYDD9xDbB7DVJmM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/wiki/Practice/react/effects-reducers-context/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","styles","Button","emailReducer","prevState","action","type","value","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmailState","undefined","passwordState","dispatchPasswordState","timer","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes(\"@\"),\n    };\n  };\n    if (action.type === \"INPUT_BLUR\") {\n      return {\n        value: prevState.value,\n        isValid: prevState.value.includes(\"@\"),\n      }\n    };\n  return {\n    value: \"\",\n    isValid: false,\n  }\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 7,\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 7,\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false,\n  }\n}\n\nconst Login = (props) => {\n  // const [inputEmail, setInputEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [inputPassword, setInputPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {value: \"\", isValid: undefined,});\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {value: \"\", isValid: undefined,});\n\n  useEffect(() => {\n    const timer = setTimeout (() => {\n      setFormIsValid(\n        emailState.isValid && passwordState.isValid\n      );\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer)\n    };\n  }, [emailState.value, passwordState.value]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmailState({type: \"USER_INPUT\", value: event.target.value});\n\n    // setFormIsValid(\n    //     event.target.value.includes(\"@\") && passwordState.isValid\n    //   );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPasswordState({type: \"USER_INPUT\", value: event.target.value})\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 7 && emailState.isValid\n    //   );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({type: \"INPUT_BLUR\"});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasswordState({type: \"INPUT_BLUR\"});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={styles.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${styles.control} ${\n            emailState.isValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${styles.control} ${\n            passwordState.isValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={styles.actions}>\n          <Button type=\"submit\" className={styles.btn} disabled={!formIsValid}>\n            Вход\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}