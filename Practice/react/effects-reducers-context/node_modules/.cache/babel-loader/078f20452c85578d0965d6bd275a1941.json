{"ast":null,"code":"var _jsxFileName = \"D:\\\\wiki\\\\Practice\\\\react\\\\effects-reducers-context\\\\src\\\\context\\\\Auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLogedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedLoginInfo = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedLoginInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n\n    ;\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/wiki/Practice/react/effects-reducers-context/src/context/Auth-context.js"],"names":["React","useState","AuthContext","createContext","isLogedIn","onLogout","onLogin","email","password","AuthContextProvider","props","isLoggedIn","setIsLoggedIn","useEffect","storedLoginInfo","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,SAAS,EAAE,KAD2B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFoB;AAGtCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEAY,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAxB;;AAEA,QAAIF,eAAe,KAAK,GAAxB,EAA6B;AAC3BF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAAA;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMK,aAAa,GAAG,MAAM;AAC1BF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAN,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMO,YAAY,GAAG,MAAM;AACzBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AACN,IAAA,KAAK,EAAE;AACLD,MAAAA,UAAU,EAAEA,UADP;AAELN,MAAAA,QAAQ,EAAEY,aAFL;AAGLX,MAAAA,OAAO,EAAEa;AAHJ,KADD;AAAA,cAOLT,KAAK,CAACW;AAPD;AAAA;AAAA;AAAA;AAAA,UAAR;AASD,CA9BM;;GAAMZ,mB;;KAAAA,mB;AAgCb,eAAeP,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  isLogedIn: false,\r\n  onLogout: () => {},\r\n  onLogin: (email, password) => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedLoginInfo = localStorage.getItem(\"isLoggedIn\");\r\n\r\n    if (storedLoginInfo === \"1\") {\r\n      setIsLoggedIn(true);\r\n    };\r\n  }, [])\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"isLoggedIn\")\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", \"1\");\r\n    setIsLoggedIn(true);\r\n  }\r\n\r\n  return (<AuthContext.Provider \r\n    value={{\r\n      isLoggedIn: isLoggedIn, \r\n      onLogout: logoutHandler, \r\n      onLogin: loginHandler\r\n    }}\r\n  >\r\n    {props.children}\r\n  </AuthContext.Provider>)\r\n};\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}